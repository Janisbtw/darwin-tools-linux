name: Create Release

on:
  - push
  - workflow_dispatch

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu:24.04
            name: ubuntu24.04
          - runner: archlinux:base-devel
            name: arch
          - runner: fedora:39
            name: ubi9
          # - runner: arm64v8/ubuntu:24.04
          #   name: ubuntu24.04-aarch64
          # - runner: lopsided/archlinux-arm64v8:devel
          #   name: arch-aarch64
          # - runner: arm64v8/fedora:39
          #   name: ubi9-aarch64

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: QEMU fix
      run: |
        if echo "${{ matrix.name }}" | grep "aarch64"; then
          docker run --rm --privileged hypriot/qemu-register
        else
          echo "Not aarch64; no fix needed..."
        fi

    - name: Build Release
      run: |
        # No amd64 aarch64 image for Fedora/Ubuntu24.04 so need to be explicit (breaks other distros' docker run cmds)
        platform_flag=$(if [[ "${{ matrix.name }}" = "ubi9-aarch64" || "${{ matrix.name }}" = "ubuntu24.04-aarch64" ]]; then echo "--platform=linux/arm64"; else echo ""; fi)
        docker run $platform_flag \
          --rm \
          -v /qemu-aarch64:/usr/bin/qemu-aarch64 \
          -v $PWD:/workspace \
          -w /workspace \
          ${{ matrix.runner }} \
          sh -c "
            ./prepare-env ${{ matrix.name }}
            CC=clang CXX=clang++ ./prepare-toolchain
            mv packages/darwin-tools.tar.gz packages/darwin-tools-${{ matrix.name }}.tar.gz
          "

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: DT-${{ matrix.name }}
        path: packages/darwin-tools-${{ matrix.name }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: DT-*
          path: packages

      - name: Create and publish release
        run: |
          TAG="${GITHUB_REF##*/}-${GITHUB_SHA:0:7}"
          gh release create "$TAG" --draft --title "Draft Release"
          gh release upload "$TAG" packages/**/*.tar.gz
